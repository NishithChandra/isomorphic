#!/usr/bin/env node

var program = require('commander'),
    exec = require('child_process').exec,
    path = require('path'),
    ncp = require('ncp').ncp,
    fs = require('fs');

var pkg = require('../package.json'),
    version = pkg.version;

program
  .version(version)
  .usage('[options] [dir]')
  .parse(process.argv);

var destination = program.args.shift() || '.';
emptyDirectory(destination, function (empty) {
  if (empty) {
    createApplicationAt(path);
  } else {
    program.confirm('destination is not empty, continue? ', function (ok) {
      if (ok) {
        process.stdin.destroy();
        createApplicationAt(path);
      } else {
        abort('aborting');
      }
    });
  }
});

/**
 */

function createApplicationAt (path) {
  var blueprint = path.resolve(path.join(__dirname, "..", "blueprint"));
  ncp(blueprint, destination, function (err) {
   if (err) {
     return console.error(err);
   } else {
     installApplication(path);
   }
  });
}

/**
 */

function installApplication (path) {
  console.log(path)
  // exec('cd ' + path + ' && npm install',
  //   function (error, stdout, stderr) {
  //     console.log('stdout: ' + stdout);
  //     console.log('stderr: ' + stderr);
  //     if (error !== null) {
  //       console.log('exec error: ' + error);
  //     }
  // });
}

/**
 * Check if the given directory `path` is empty.
 *
 * @param {String} path
 * @param {Function} fn
 */

function emptyDirectory (path, fn) {
  fs.readdir(path, function (err, files) {
    if (err && 'ENOENT' != err.code) {
      throw err;
    }
    fn(!files || !files.length);
  });
}
